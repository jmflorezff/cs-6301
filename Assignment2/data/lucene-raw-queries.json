{"id": 1, "title": "ParallelCompositeReader does not always call closed listeners", "description": "CompositeParallelReader misses to call closed listeners when the reader which is provided at construction time does not wrap leaf readers directly, such as a multi reader over directory readers.", "doc_ids": [9211]}
{"id": 2, "title": "Date field problems using ExtractingRequestHandler and java 9 (b71)", "description": "\n\nTracking bug to note that the (Tika based) ExtractingRequestHandler will not work properly with jdk9 starting with build71.\n\nThis first manifested itself with failures like this from the tests...\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=ExtractingRequestHandlerTest\n-Dtests.method=testArabicPDF -Dtests.seed=232D0A5404C2ADED -Dtests.multiplier=3 -Dtests.slow=true\n-Dtests.locale=en_JM -Dtests.timezone=Etc/GMT-7 -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.58s | ExtractingRequestHandlerTest.testArabicPDF <<<\n   [junit4]    > Throwable #1: org.apache.solr.common.SolrException: Invalid Date String:'Tue Mar 09 13:44:49\nGMT+07:00 2010'\n\nWorkarround noted by Uwe...\n\n    The test passes on JDK 9 b71 with:\n    -Dargs=\"-Djava.locale.providers=JRE,SPI\"\n\n    This reenabled the old Locale data. I will add this to the build parameters of policeman Jenkins to stop this from\n    failing. To me it looks like the locale data somehow is not able to correctly parse weekdays and/or timezones. I\n    will check this out tomorrow and report a bug to the OpenJDK people. There is something fishy with CLDR locale data.\n    There are already some bugs open, so work is not yet finished (e.g. sometimes it uses wrong timezone shortcuts,...)\n\n", "doc_ids": [871, 956, 1007]}
{"id": 3, "title": "QueryParserBase ignores maxDeterminizedStates when creating a wildcard query", "description": "I think that QueryParserBase should construct the WildcardQuery with the provided maxDeterminizedStates and not the default one.", "doc_ids": [20059]}
{"id": 4, "title": "ToChildBlockJoinScorer should not fail when advanced on a parent document", "description": "ToChildBlockJoinScorer fails if you advance it on a parent document. While this was fine if you wrapped it in a FilteredQuery, it is not if you wrap it in a BooleanQuery because of its approximation support: it can be advanced to a document that has been returned by the approximation of another clause but not confirmed yet. So ToChildBlockJoinScorer should accept any valid doc ID as a target.", "doc_ids": [258]}
{"id": 5, "title": "TimeLimitingCollector should check timeout also when LeafCollector is pulled", "description": "TimeLimitingCollector only check the timeout if there is actually a hit. If you never hit anything but have a damn slow query for whatever reason the timeout is never hit.", "doc_ids": [11160]}
