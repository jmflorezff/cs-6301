# lextab.py. This file automatically created by PLY (version 3.8). Don't edit!
_tabversion   = '3.8'
_lextokens    = {'MINUS_ASSIGN', 'SHORT', 'RSHIFT', 'CATCH', 'TRANSIENT', 'PACKAGE', 'LTEQ', 'ENUM', 'LSHIFT_ASSIGN', 'BOOLEAN', 'STRING_LITERAL', 'NATIVE', 'CONTINUE', 'DO', 'NUM', 'INT', 'EXTENDS', 'NAME', 'DIVIDE_ASSIGN', 'SYNCHRONIZED', 'THROWS', 'EQ', 'CLASS', 'CHAR', 'FINALLY', 'FINAL', 'PROTECTED', 'RRSHIFT', 'OR', 'SWITCH', 'IMPORT', 'MINUSMINUS', 'TRY', 'VOID', 'LINE_COMMENT', 'REMAINDER_ASSIGN', 'STRICTFP', 'RETURN', 'OR_ASSIGN', 'PRIVATE', 'IF', 'FALSE', 'AND_ASSIGN', 'PUBLIC', 'LSHIFT', 'CHAR_LITERAL', 'THIS', 'SUPER', 'ELLIPSIS', 'FLOAT', 'FOR', 'NEW', 'BREAK', 'ASSERT', 'TIMES_ASSIGN', 'TRUE', 'BYTE', 'ELSE', 'XOR_ASSIGN', 'AND', 'BLOCK_COMMENT', 'GTEQ', 'PLUS_ASSIGN', 'RSHIFT_ASSIGN', 'IMPLEMENTS', 'PLUSPLUS', 'INTERFACE', 'LONG', 'NULL', 'DEFAULT', 'RRSHIFT_ASSIGN', 'WHILE', 'DOUBLE', 'INSTANCEOF', 'ABSTRACT', 'STATIC', 'THROW', 'NEQ', 'VOLATILE', 'CASE'}
_lexreflags   = 0
_lexliterals  = '()+-*/=?:,.^|&~!=[]{};<>@%'
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_LINE_COMMENT>//.*)|(?P<t_BLOCK_COMMENT>/\\*(.|\\n)*?\\*/)|(?P<t_semicolon>;)|(?P<t_NAME>[A-Za-z_$][A-Za-z0-9_$]*)|(?P<t_newline>\\n+)|(?P<t_newline2>(\\r\\n)+)|(?P<t_NUM>\\.?[0-9][0-9eE_lLdDa-fA-F.xXpP]*)|(?P<t_STRING_LITERAL>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_CHAR_LITERAL>\\\'([^\\\\\\n]|(\\\\.))*?\\\')|(?P<t_ELLIPSIS>\\.\\.\\.)|(?P<t_RRSHIFT_ASSIGN>>>>=)|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_MINUSMINUS>\\-\\-)|(?P<t_OR>\\|\\|)|(?P<t_XOR_ASSIGN>\\^=)|(?P<t_RSHIFT_ASSIGN>>>=)|(?P<t_LSHIFT_ASSIGN><<=)|(?P<t_RRSHIFT>>>>)|(?P<t_TIMES_ASSIGN>\\*=)|(?P<t_OR_ASSIGN>\\|=)|(?P<t_PLUS_ASSIGN>\\+=)|(?P<t_NEQ>!=)|(?P<t_AND>&&)|(?P<t_DIVIDE_ASSIGN>/=)|(?P<t_RSHIFT>>>)|(?P<t_EQ>==)|(?P<t_LSHIFT><<)|(?P<t_AND_ASSIGN>&=)|(?P<t_GTEQ>>=)|(?P<t_REMAINDER_ASSIGN>%=)|(?P<t_MINUS_ASSIGN>-=)|(?P<t_LTEQ><=)', [None, ('t_LINE_COMMENT', 'LINE_COMMENT'), ('t_BLOCK_COMMENT', 'BLOCK_COMMENT'), None, ('t_semicolon', 'semicolon'), ('t_NAME', 'NAME'), ('t_newline', 'newline'), ('t_newline2', 'newline2'), None, (None, 'NUM'), (None, 'STRING_LITERAL'), None, None, (None, 'CHAR_LITERAL'), None, None, (None, 'ELLIPSIS'), (None, 'RRSHIFT_ASSIGN'), (None, 'PLUSPLUS'), (None, 'MINUSMINUS'), (None, 'OR'), (None, 'XOR_ASSIGN'), (None, 'RSHIFT_ASSIGN'), (None, 'LSHIFT_ASSIGN'), (None, 'RRSHIFT'), (None, 'TIMES_ASSIGN'), (None, 'OR_ASSIGN'), (None, 'PLUS_ASSIGN'), (None, 'NEQ'), (None, 'AND'), (None, 'DIVIDE_ASSIGN'), (None, 'RSHIFT'), (None, 'EQ'), (None, 'LSHIFT'), (None, 'AND_ASSIGN'), (None, 'GTEQ'), (None, 'REMAINDER_ASSIGN'), (None, 'MINUS_ASSIGN'), (None, 'LTEQ')])]}
_lexstateignore = {'INITIAL': ' \t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
_lexstateeoff = {}
